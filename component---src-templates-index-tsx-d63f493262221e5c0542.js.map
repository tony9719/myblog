{"version":3,"sources":["webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/index.tsx","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["navCss","css","darken","colors","darkgrey","Pagination","_ref","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","Object","core_browser_esm","gatsby_browser_entry","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","HomePosts","name","styles","pageQuery","IndexPage","props","width","data","header","childImageSharp","fluid","sizes","split","height","Number","aspectRatio","layouts","Helmet_default","a","lang","config","title","content","description","property","siteUrl","src","facebook","googleSiteVerification","twitter","Wrapper","css_browser_esm","outer","SiteHeader","style","backgroundImage","inner","shared","logo","maxHeight","fixed","alt","SiteNav","isHome","id","SiteMain","PostFeed","PostFeedRaise","allMarkdownRemark","edges","map","post","node","frontmatter","draft","PostCard","fields","slug","children","components_Pagination","pageContext","Footer","global","__webpack_require__","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","l","parseInt","value","arguments","that","this","valueOf","call","keys","j","constructor"],"mappings":"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","file":"component---src-templates-index-tsx-d63f493262221e5c0542.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { darken } from 'polished';\r\nimport { css } from '@emotion/core';\r\n\r\nimport { colors } from '../styles/colors';\r\n\r\nexport interface PaginationProps {\r\n  currentPage: number;\r\n  numPages: number;\r\n}\r\n\r\nconst navCss = css`\r\n  text-align: center;\r\n  div {\r\n    display: inline-block;\r\n  }\r\n\r\n  a {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\r\n    background: #fff;\r\n    color: black;\r\n    float: left;\r\n    padding: 8px 16px;\r\n    text-decoration: none;\r\n    transition: background-color .3s;\r\n    border: 1px solid #ddd;\r\n    margin: 0 4px;\r\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\r\n    border-radius: 6px;\r\n    margin-bottom: 5px;\r\n    min-width: 50px;\r\n\r\n    &.active {\r\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\r\n    }\r\n\r\n    &:hover:not(.active) {\r\n      background-color: #ddd;\r\n    }\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n\r\n  return (\r\n    <nav css={navCss}>\r\n      <div>\r\n        {!isFirst && (\r\n          <Link to={prevPage} rel=\"prev\">\r\n            {/* << symbol */}\r\n            {String.fromCharCode(171)}\r\n          </Link>\r\n        )}\r\n\r\n        {Array.from({ length: numPages }, (_, i) => (\r\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\r\n            {i + 1}\r\n          </Link>\r\n        ))}\r\n\r\n        {!isLast && (\r\n          <Link to={nextPage} rel=\"next\">\r\n            {/* >> symbol */}\r\n            {String.fromCharCode(187)}\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { graphql } from 'gatsby';\r\nimport * as React from 'react';\r\nimport { css } from '@emotion/core';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport Footer from '../components/Footer';\r\nimport SiteNav from '../components/header/SiteNav';\r\nimport PostCard from '../components/PostCard';\r\nimport Wrapper from '../components/Wrapper';\r\nimport IndexLayout from '../layouts';\r\nimport config from '../website-config';\r\nimport Pagination from '../components/Pagination';\r\n\r\nimport {\r\n  inner,\r\n  outer,\r\n  PostFeed,\r\n  PostFeedRaise,\r\n  SiteDescription,\r\n  SiteHeader,\r\n  SiteHeaderContent,\r\n  SiteMain,\r\n  SiteTitle,\r\n} from '../styles/shared';\r\nimport { PageContext } from './post';\r\n\r\nconst HomePosts = css`\r\n  @media (min-width: 795px) {\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) {\r\n      flex: 1 1 100%;\r\n      flex-direction: row;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image-link {\r\n      position: relative;\r\n      flex: 1 1 auto;\r\n      border-radius: 5px 0 0 5px;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-image {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content {\r\n      flex: 0 1 357px;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) h2 {\r\n      font-size: 2.6rem;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) p {\r\n      font-size: 1.8rem;\r\n      line-height: 1.55em;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-content-link {\r\n      padding: 30px 40px 0;\r\n    }\r\n\r\n    .post-card:nth-of-type(6n + 1):not(.no-image) .post-card-meta {\r\n      padding: 0 40px 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface IndexProps {\r\n  pageContext: {\r\n    currentPage: number;\r\n    numPages: number;\r\n  };\r\n  data: {\r\n    logo: {\r\n      childImageSharp: {\r\n        fixed: any;\r\n      };\r\n    };\r\n    header: {\r\n      childImageSharp: {\r\n        fluid: any;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      edges: Array<{\r\n        node: PageContext;\r\n      }>;\r\n    };\r\n  };\r\n}\r\n\r\nconst IndexPage: React.FC<IndexProps> = props => {\r\n  const width = props.data.header.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\r\n  const height = String(Number(width) / props.data.header.childImageSharp.fluid.aspectRatio);\r\n\r\n  return (\r\n    <IndexLayout css={HomePosts}>\r\n      <Helmet>\r\n        <html lang={config.lang} />\r\n        <title>{config.title}</title>\r\n        <meta name=\"description\" content={config.description} />\r\n        <meta property=\"og:site_name\" content={config.title} />\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta property=\"og:title\" content={config.title} />\r\n        <meta property=\"og:description\" content={config.description} />\r\n        <meta property=\"og:url\" content={config.siteUrl} />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\r\n        />\r\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\r\n        {config.googleSiteVerification && <meta name=\"google-site-verification\" content={config.googleSiteVerification} />}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:title\" content={config.title} />\r\n        <meta name=\"twitter:description\" content={config.description} />\r\n        <meta name=\"twitter:url\" content={config.siteUrl} />\r\n        <meta\r\n          name=\"twitter:image\"\r\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fluid.src}`}\r\n        />\r\n        {config.twitter && (\r\n          <meta\r\n            name=\"twitter:site\"\r\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\r\n          />\r\n        )}\r\n        <meta property=\"og:image:width\" content={width} />\r\n        <meta property=\"og:image:height\" content={height} />\r\n      </Helmet>\r\n      <Wrapper>\r\n        <header\r\n          css={[outer, SiteHeader]}\r\n          style={{\r\n            backgroundImage: `url('${props.data.header.childImageSharp.fluid.src}')`,\r\n          }}\r\n        >\r\n          <div css={inner}>\r\n            <SiteHeaderContent>\r\n              <SiteTitle>\r\n                {props.data.logo ? (\r\n                  <img\r\n                    style={{ maxHeight: '45px' }}\r\n                    src={props.data.logo.childImageSharp.fixed.src}\r\n                    alt={config.title}\r\n                  />\r\n                ) : (\r\n                  config.title\r\n                )}\r\n              </SiteTitle>\r\n              <SiteDescription>{config.description}</SiteDescription>\r\n            </SiteHeaderContent>\r\n            <SiteNav isHome />\r\n          </div>\r\n        </header>\r\n        <main id=\"site-main\" css={[SiteMain, outer]}>\r\n          <div css={inner}>\r\n            <div css={[PostFeed, PostFeedRaise]}>\r\n              {props.data.allMarkdownRemark.edges.map(post => {\r\n                // filter out drafts in production\r\n                return (\r\n                  (post.node.frontmatter.draft !== true ||\r\n                    process.env.NODE_ENV !== 'production') && (\r\n                    <PostCard key={post.node.fields.slug} post={post.node} />\r\n                  )\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        {props.children}\r\n        <Pagination currentPage={props.pageContext.currentPage} numPages={props.pageContext.numPages} />\r\n        <Footer />\r\n      </Wrapper>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fixed {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    header: file(relativePath: { eq: \"img/blog-cover.jpg\" }) {\r\n      childImageSharp {\r\n        # Specify the image processing specifications right in the query.\r\n        # Makes it trivial to update as your page's design changes.\r\n        fluid(maxWidth: 2000) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC },\r\n      filter: { frontmatter: { draft: { ne: true } } },\r\n      limit: $limit,\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            date\r\n            tags\r\n            draft\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 3720) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            author {\r\n              id\r\n              bio\r\n              avatar {\r\n                children {\r\n                  ... on ImageSharp {\r\n                    fixed(quality: 90) {\r\n                      src\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt\r\n          fields {\r\n            layout\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}